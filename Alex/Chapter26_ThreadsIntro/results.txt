1:
dx = 0  
dx = -1 sub $1,%dx
dx = -1 test $0,%dx
dx = -1 jgte .top => will not jump
dx = -1 halt

2:
dx	T1		T2
3
2	sub $1,%dx
2	test $0,%dx
2	jgte .top
1	sub $1,%dx
1	test $0,%dx
1	jgte .top
0	sub $1,%dx
0	test $0,%dx
0	jgte .top
-1	sub $1,%dx
-1	test $0,%dx
-1	jgte .top
-1	halt		
3	------------------------------
2			sub $1,%dx
2			test $0,%dx
2			jgte .top
1			sub $1,%dx
1			test $0,%dx
1			jgte .top
0			test $0,%dx
0			jgte .top
-1			sub $1,%dx
-1			test $0,%dx
-1			jgte .top
-1			halt

3:
   dx          Thread 0                Thread 1         
    3   
    2   1000 sub  $1,%dx
    2   1001 test $0,%dx
    2   1002 jgte .top
    3   ------ Interrupt ------  ------ Interrupt ------  
    2                            1000 sub  $1,%dx
    2                            1001 test $0,%dx
    2                            1002 jgte .top
    2   ------ Interrupt ------  ------ Interrupt ------  
    1   1000 sub  $1,%dx
    1   1001 test $0,%dx
    2   ------ Interrupt ------  ------ Interrupt ------  
    1                            1000 sub  $1,%dx
    1   ------ Interrupt ------  ------ Interrupt ------  
    1   1002 jgte .top
    0   1000 sub  $1,%dx
    1   ------ Interrupt ------  ------ Interrupt ------  
    1                            1001 test $0,%dx
    1                            1002 jgte .top
    0   ------ Interrupt ------  ------ Interrupt ------  
    0   1001 test $0,%dx
    0   1002 jgte .top
    -1   1000 sub  $1,%dx
    1   ------ Interrupt ------  ------ Interrupt ------  
    0                            1000 sub  $1,%dx
    -1   ------ Interrupt ------  ------ Interrupt ------  
    -1   1001 test $0,%dx
    -1   1002 jgte .top
    0   ------ Interrupt ------  ------ Interrupt ------  
    0                            1001 test $0,%dx
    0                            1002 jgte .top
    -1   ------ Interrupt ------  ------ Interrupt ------  
    -1   1003 halt
    0   ----- Halt;Switch -----  ----- Halt;Switch -----  
    -1                            1000 sub  $1,%dx
    -1                            1001 test $0,%dx
    -1   ------ Interrupt ------  ------ Interrupt ------  
    -1                            1002 jgte .top
    -1                            1003 halt

frquenzy does effect the sequence of instructions and running threads. (in this example)

4:
value should be 1, because bx is not set, but increment takes is executed at least once

?5: interrupt frequency is 50 => instructions per loop = 6 max loops per interrupt = 50/6 = 8?

6: 
interrupts matter if they occur between sub and move back.

7:
critical section is are instructions 2 and 3, so if the interrupt occur after the second instruction,
the result is wrong. At given 6 instructions, only multiples of 3 are safe to run, or sequences,
which do not become 2.

8:
see 7

9:
value should be 1. waiter (ax = 0) waits until signaller (ax = 1) finished writing

10:
roles are switched. result is the same, no matter how interrupt frquency is set.
Program is inefficient, cause it could get stuck in wait mode.
